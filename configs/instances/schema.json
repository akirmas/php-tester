{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "instances_schema.json#",
  "type": "object",
  "properties": {
    "request": {
      "type": "object",
      "properties": {
        "engine": {
          "type": "object",
          "properties": {
            "gateway": {
              "type": "string",
              "format": "uri"
            },
            "method": {
              "enum": ["GET", "POST"]
            }
          },
          "additionalProperties": false
        },
        "fields": {
          "type": "object",
          "properties": {
            "success": {
              "description": "Result of whole transaction, that could consist of several actions",
              "type": "string"
            },
            "id": {
              "description": "Identifier of transaction",
              "type": "string"
            },
            "description": {
              "description": "Description of transaction",
              "type": "string"
            },
            "account": {
              "description": "Account at instance that will provide transaction",
              "type": "string"
            },
            "installments": {
              "description": "Count of pays",
              "type": "string"
            },
            "verify": {
              "description": "Charge, check insufficient funds, etc",
              "type": "string"
            },
            "currency:exchange": {
              "description": "Request of recalculation",
              "type": "string"
            },
            "currency:final": {
              "description": "If request was satisfied will be equel to :exchange, otherwise to original 'currency'",
              "type": "string"
            },
            "fee": {
              "description": "Amount multiplier (1+fee) on this side. For pushing fee to API use fee:final",
              "type": "string"
            },
            "amount:final": {
              "description": "Result of all payment amount recalculations",
              "type": "string"
            },
            "amountInt:final": {
              "description": "Result amount multiplied by 100 to avoid decimals",
              "type": "string"
            },
            "cc:number": {
              "type": "string"
            },
            "cc:expire:date": {
              "type": "string"
            },
            "cc:expire:month": {
              "type": "string"
            },
            "cc:expire:year": {
              "type": "string"
            },
            "cc:cvv": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "company": {
              "type": "string"
            },
            "name:first": {
              "type": "string"
            },
            "name:last": {
              "type": "string"
            },
            "name:full": {
              "type": "string"
            },
            "social_id": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "address:country:ISO": {
              "type": "string"
            },
            "address:zip": {
              "type": "string"
            }, 
            "address:city": {
              "type": "string"
            },
            "address:0": {
              "type": "string"
            },
            "address:1": {
              "type": "string"
            },
            "quizUrl": {
              "description": "API could request own form to client",
              "type": "string"
            },
            "quizUrl:next": {
              "description": "After submiting API's form/iframe user will forward here",
              "type": "string"
            },
            "quizUrl:notify": {
              "description": "API's form/iframe data will be sent here",
              "type": "string"
            },
            "quizUrl:subscribe": {
              "description": "Await for API's form/iframe data",
              "type": "string"
            },
            "language": {
              "type": "string"
            }
          },
          "required": ["email", "currency:final"],
          "additionalProperties": false
        },
        "values": {
          "type": "object",
          "properties": {
            
            "installments": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/installments" }
                }
              }
            },
            "account": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/account" }
                }
              }
            },
            "verify": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/verify" }
                }
              }
            },
            "amount": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/amount" }
                }
              }
            },
            "currency:final": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/currency:final" }
                }
              }
            },
            "cc:number": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/cc:number" }
                }
              }
            },
            "cc:expire:month": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/cc:expire:month" }
                }
              }
            },
            "cc:expire:year": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/cc:expire:year" }
                }
              }
            },
            "cc:cvv": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/cc:cvv" }
                }
              }
            },
            "phone": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/phone" }
                }
              }
            },
            "email": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/email" }
                }
              }
            },
            "name:full": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/name:full" }
                }
              }
            },
            "address:country:ISO": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/address:country:ISO" }
                }
              }
            },
            "address:zip": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/address:zip" }
                }
              }
            }, 
            "address:city": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/address:city" }
                }
              }
            },
            "address:0": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/address:0" }
                }
              }
            },
            "address:1": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/address:1" }
                }
              }
            },
            "quizUrl:next": {
              "type": "object",
              "$filters": {
                "$func": "match",
                "$vars": {
                  "value": { "$ref": "2/fields/quizUrl:next" }
                }
              }
            }

        },
        "defaults": {
          "type": "object"
        },
        "overrides": {
          "type": "object"
        }
        }
      },
      "additionalProperties": false
    },
    "response": {
      "type": "object",
      "properties": {
        "return:code": {
          "type": "string"
        }
      }
    },
    "additionalProperties": false
  }
}
